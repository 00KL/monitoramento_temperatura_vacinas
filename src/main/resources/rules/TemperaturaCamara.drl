package com.ufes.sistema_baseados_em_regras.trabalho1

//list any import classes here.
import com.ufes.sistema_baseados_em_regras.entidades.Camara;
import com.ufes.sistema_baseados_em_regras.entidades.TipoVacina;
import com.ufes.sistema_baseados_em_regras.entidades.LoteVacina;
import com.ufes.sistema_baseados_em_regras.entidades.TipoIrregularidade
import com.ufes.sistema_baseados_em_regras.entidades.RegistroIrregularidadeTemp;

import java.time.LocalDateTime;
import java.text.SimpleDateFormat;


//declare any global variables here

declare Medicao
	camara: Camara
	temp: float
end



rule "checando temperatura"
    when
        $camara: Camara($num: num, $temp: tempAtual)
    then
    	insert (new Medicao($camara, $temp));
        System.out.println("Camara " + $num + " com a temperatura de: " + $temp);
end

rule "Avisando que temperatura está acima da temperatura máxima para dado tipo de vacina"
	when
		$camara: Camara($num: num, $temp: tempAtual, $lotes: lotesvacina)
		$lote: LoteVacina() from $camara.getLotesvacina
		$tipo: TipoVacina($tempMax: tempMax < $temp, $nome: nome) from $lote.getTipoVacina
	then
		LocalDateTime hora_inicio = LocalDateTime.now();
		RegistroIrregularidadeTemp reg = new RegistroIrregularidadeTemp(TipoIrregularidade.Acima_Da_Temperatura, hora_inicio);
		System.out.println("Temperatura acima da limite para a vacina " + $nome + ".\nDiminua a temperatura em " + ($temp - $tempMax) + "°C");
		insert(reg);
end

rule "Avisando que temperatura está abaixo da temperatura mínima para dado tipo de vacina"
	when
		$camara: Camara($num: num, $temp: tempAtual, $lotes: lotesvacina)
		$lote: LoteVacina() from $camara.getLotesvacina
		$tipo: TipoVacina($tempMin: tempMin > $temp, $nome: nome) from $lote.getTipoVacina
	then
		System.out.println("Temperatura abaixo da limite para a vacina " + $nome + ".\nAumente a temperatura em " + ($tempMin - $temp) + "°C");
end

rule "Avisando que um dado lote de vacina venceu"
	when
		$camara: Camara($num: num, $lotes: lotesvacina)
		$hoje: LocalDateTime() from $camara.getHoje
		$lote: LoteVacina($validade: dataValidade < $hoje) from $camara.getLotesvacina
		$tipo: TipoVacina($tempMin: tempMin, $nome: nome) from $lote.getTipoVacina
		
	then
		
		System.out.println("Lote venceu no dia: " + $validade + ".\nO descarte é recomendado.");
end

rule "Checar se a irregularidade foi resolvida a tempo (tempo em temp acima da máxima"
	when
		$reg: RegistroIrregularidadeTemp($inicio: horaInicio)
		$camara: Camara($num: num, $temp: tempAtual, $lotes: lotesvacina)
		$lote: LoteVacina() from $camara.getLotesvacina
		$hoje: LocalDateTime() from $camara.getHoje
		$tipo: TipoVacina($tempoMaxAcimaTempIdeal: tempoMaxAcimaTempIdeal > ($hoje - $inicio)) from $lote.getTipoVacina
	then
		System.out.println("A vacina passou tempo de mais em temperatura acima da indicada e deve ser descartada.");
end		
